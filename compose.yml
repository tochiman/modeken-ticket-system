version: '3'
services:
  front:
    init: true
    container_name: modeken_front
    hostname: 'front.modeken-system.com'
    build: 
      context: ./front
      dockerfile: .Dockerfile
    # working_dir: /opt/app
    user: node
    expose: 
      - 3000
    volumes:
      - ./front/modeken-system:/app
    tty: true
    environment:
      - WATCHPACK_POLLING=true
      - URI_WSS=${URI_WSS}
      - URI_BACK=${URI_BACK}
      - BASIC_AUTH_NAME=${BASIC_AUTH_NAME}
      - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}
      - WEBSOCKET_USER=${WEBSOCKET_USER:-user}
      - WEBSOCKET_PASSWORD=${WEBSOCKET_PASSWORD:-password}
    command: "yarn dev"
    # depends_on:
    #   api:
    #     condition: service_started
    networks:
      - frontend

  nginx:
    container_name: modeken_nginx
    restart: always
    depends_on:
      - backend
      - front
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - 443:443
    networks:
      - frontend
      - backend

  backend:
    hostname: backend.modeken-system.com
    container_name: modeken_backend
    restart: always
    depends_on:
      - db
    environment:
      MONGO_USER: '${MONGODB_USER:-user}'
      MONGO_PASSWORD: '${MONGODB_PASSWORD:-password}'
      BASIC_USER: '${BASIC_AUTH_NAME}'
      BASIC_PASSWORD: '${BASIC_AUTH_PASSWORD}'
      WEBSOCKET_USER: '${WEBSOCKET_USER:-user}'
      WEBSOCKET_PASSWORD: '${WEBSOCKET_PASSWORD:-password}'
      NUMBER_OF_ITEM_KIND: '${NUMBER_OF_ITEM_KIND:-2}'
      ROOT_PATH: '${ROOT_PATH:-/api/v1.0}'
      TZ: Asia/Tokyo
    volumes:
      - ./backend:/backend
    build:
      context: backend
      dockerfile: Dockerfile
    expose:
      - 8080
    networks:
      - backend

  db:
    hostname: db.modeken-system.com
    image: mongo:7.0.2
    container_name: modeken_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGODB_USER:-user}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGODB_PASSWORD:-password}'
      TZ: Asia/Tokyo
    expose:
      - 27017
    volumes:
      - ./mongodb/mongodb_data:/data/db
      - ./mongodb/configdb:/data/configdb
    networks:
      - backend
    
networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.25.0/24
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.26.0/24
